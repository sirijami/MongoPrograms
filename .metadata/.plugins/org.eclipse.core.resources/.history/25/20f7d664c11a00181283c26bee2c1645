package FixedLengthInputFormatPackage;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.BytesWritable;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.FixedLengthInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class Driver {

	public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
		Configuration conf = new Configuration();
//		conf.setInt(FixedLengthInputFormat.FIXED_RECORD_LENGTH, FixedLengthInputFormat.getRecordLength(conf));
		conf.setInt(FixedLengthInputFormat.FIXED_RECORD_LENGTH, 100);
		
		Job job = Job.getInstance();
		job.setJarByClass(Driver.class);
		
		job.setMapperClass(testMapper.class);
		job.setReducerClass(testReducer.class);		
		job.setInputFormatClass(FixedLengthInputFormat.class);
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(IntWritable.class);
		
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
				
		System.exit(job.waitForCompletion(true) ? 0 : 1);
		
	}
	
	public static class testMapper extends Mapper<LongWritable, BytesWritable, Text, IntWritable>{

		@Override
		protected void map(
				LongWritable key,
				BytesWritable value,
				Mapper<LongWritable, BytesWritable, Text, IntWritable>.Context context)
				throws IOException, InterruptedException {
			System.out.println("Value " + value);

		}				
	}
	
	public static class testReducer extends Reducer<Text, IntWritable, Text, IntWritable>{
		
		
	}

}
