import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.Mapper.Context;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;


public class AveragePrice_StockHigh {
	
	
	public static class Avg_StockHighMapper extends Mapper<Object, Text, Text, FloatWritable> {
		private static final IntWritable one = new IntWritable(1);
		private Text word = new Text();

		@Override
		protected void map(Object key, Text value, Context context)
				throws IOException, InterruptedException {
			String[] temp = value.toString().split(",");
			

		}
	}
	
	/* Combiner class where it calculates sum for each stock symbol 
	 * o/p : "AAA, 234"
	 */
	public static class sumReducer extends Reducer<Text, IntWritable, Text, IntWritable> {
		private IntWritable result = new IntWritable();
		
		@Override
		protected void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException {
			
			int sum = 0;
			for(IntWritable val : values){
				sum = sum + val.get();
			}
			result.set(sum);
            context.write(key, result);		
		} 
		
	}
	
	/* Calculates the average */
	public static class Avg_StockHighReducer extends Reducer<Text, IntWritable, Text, FloatWritable> {
		private FloatWritable result = new FloatWritable();
		
		@Override
		protected void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException {
			
			int sum = 0;
			for(IntWritable val : values){
				sum = sum + val.get();
			}
			result.set(sum);
            context.write(key, result);		
		} 


	}


	public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
		/* Create a Job */
		Job job = Job.getInstance();
//		job.setJarByClass(WordCountM.class);
		
		/* Create map and reduce class */
		job.setMapperClass(Avg_StockHighMapper.class);
		
        /* Set Combiner */
//		job.setCombinerClass(Avg_StockHighReducer.class);
		job.setReducerClass(Avg_StockHighReducer.class);
		
		/* Set output key and value class */
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(IntWritable.class);
		
		/* Set Input and output format classes */
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);
	
		
		/* Set input & output format */
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		
		System.exit(job.waitForCompletion(true) ? 0 : 1);

}


}
